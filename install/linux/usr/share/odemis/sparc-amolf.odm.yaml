# Configuration for the SPARC system at AMOLF. 
# The main difference with the typical SPARC is that camera are Princeton-Instruments.

SPARC-AMOLF: {
    class: Microscope,
    role: sparc,
    emitters: ["EBeam ExtXY", "AR Lens"],
    detectors: ["SED ExtXY", "ARCam", "Spec10"],
    actuators: ["MirrorMover"],
}

# Quanta SEM driven via external X/Y connection, using a DAQ board
"SEM ExtXY": {
    class: semcomedi.SEMComedi,
    role: none,
    init: {device: "/dev/comedi0"},
    # more detectors can be added, if necessary
    children: {scanner: "EBeam ExtXY", detector0: "SED ExtXY"}
}

# Connect:
# X -> AO 0
# Y -> AO 1
# Ground -> AO GND
"EBeam ExtXY": {
    # Internal child of SEM ExtXY, so no class
    role: e-beam,
    init: {
        channels: [0, 1],
        limits: [[3, -3], [-4, 4]], # V
        settle_time: 10.e-6, # s
        hfw_nomag: 0.1067, # m
    },
    properties: {
        scale: [8, 8], # (ratio) : start with a pretty fast scan
        dwellTime: 10.e-6, # s
        magnification: 200, # (ratio)
    },
    affects: ["SED ExtXY", SpecCam, ARCam] # affects the CCD in case of cathodoluminescence
}

# Must be connected on AI 0/AI GND
"SED ExtXY": { # aka ETD
    # Internal child of Quanta ExtXY, so no class
    role: se-detector,
    init: {
        channel: 0,
        limits: [-3, 3] # V
    },
}

"AR Lens": {
    class: static.OpticalLens,
    role: lens,
    init: {mag: 0.4917, # ratio
           pole_pos: [566, 506], # (px, px), position of the pole (aka the hole in the mirror) without binning
          }, 
    affects: ["ARCam"]
}

# PIXIS via USB
ARCam: {
    class: pvcam.PVCam,
    role: ccd,
    init: {device: "rspipixis"} # use 0 if this symlink is no created
}

Spec10: {
    class: spectrometer.CompositedSpectrometer,
    role: spectrometer,
    children: {detector: "SpecCam", spectrograph: "SP2300i"}
}

SpecCam: {
    class: pvcam.PVCam,
    role: sp-ccd,
    init: {device: "rspist133"}
}

# SP-2300i, the spectrograph part of the Spec-10
SP2300i: {
    class: spectrapro.SpectraPro,
    role: spectrograph,
    affects: [SpecCam],
    init: {
        port: "/dev/ttySP",
    },
}

# PI E-861 jumpers (. = off):
# X          = 1234.6..
# Y          = 123..6..
# RZ (yaw)   = 12.4.6..
# RY (pitch) = 12...6..
MirrorMover: {
    class: pigcs.Bus,
    role: mirror,
    init: {
        port: "/dev/ttyPIGCS",
        baudrate: 9600,
        # X/Y are same axes as SEM
        # yaw/pitch are axes according to Mirror's orientation
        # rz = yaw, ry = pitch (from Mirror's point of view)
        # axis -> controller, channel, closed-loop?
        axes: {"y":  [1, 1, False],
               "x":  [2, 1, False],
               "ry": [3, 1, False],
               "rz": [4, 1, False]},
        inverted: ["y", "ry"],
    },
    properties: {
        speed: {"x": 0.1, "y": 0.1, "rz": 0.1, "ry": 0.1} # m/s
    }
}


