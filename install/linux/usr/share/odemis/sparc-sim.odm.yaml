# Configuration to simulate a SPARC system without having any hardware.
SimSPARC: {
    class: Microscope,
    role: sparc,
    emitters: ["EBeam ExtXY"],
    detectors: ["SED ExtXY", "ARSimCam", "FakeSpec10"],
    actuators: ["MirrorMover"],
}

# Can simulate a SEM connected to a DAQ board by using the comedi_test driver:
# sudo modprobe comedi comedi_num_legacy_minors=4
# sudo modprobe comedi_test
# sudo comedi_config /dev/comedi0 comedi_test 1000000,1000000
"SEM ExtXY": {
    class: semcomedi.SEMComedi,
    role: none,
    init: {device: "/dev/comedi0"},
    # more detectors can be added, if necessary
    children: {scanner: "EBeam ExtXY", detector0: "SED ExtXY"}
}

# Connect:
# X -> AO 0
# Y -> AO 1
# Ground -> AO GND
"EBeam ExtXY": {
    # Internal child of SEM ExtXY, so no class
    role: e-beam,
    init: {
        channels: [1, 0],
        limits: [[0, 5], [0, 5]],  # V
        settle_time: 10.e-6, # s
        hfw_nomag: 10.e-3, # m
    },
    properties: {
        scale: [8, 8], # (ratio) : start with a pretty fast scan
        dwellTime: 10.e-6, # s
        magnification: 1000, # (ratio)
    },
    affects: ["SED ExtXY", SpecSimCam, ARSimCam] # affects the CCD in case of cathodoluminescence
}

# Must be connected on AI 5/AI GND
"SED ExtXY": { # aka ETD
    # Internal child of Quanta ExtXY, so no class
    role: se-detector,
    init: {
        channel: 0, # 0-> sawtooth waves, 1-> square waves
        limits: [-3, 3] # V
    },
}

ARSimCam: {
    class: andorcam2.FakeAndorCam2,
    role: ccd,
    init: {device: 0}
}

FakeSpec10: {
    class: spectrometer.CompositedSpectrometer,
    role: spectrometer,
    children: {detector: "SpecSimCam", spectrograph: "FakeSP2300i"}
}

SpecSimCam: {
    class: andorcam2.FakeAndorCam2,
    role: sp-ccd,
    init: {device: 0} # same device number but it will actually be different device
}

# Simulated SP-2300i, the spectrograph part of the Spec-10
FakeSP2300i: {
    class: spectrapro.FakeSpectraPro,
    role: spectrograph,
    affects: [SpecSimCam],
    init: {
        port: "/dev/ttySP",
    },
}

MirrorMover: {
    class: simulated.Stage2D,
    role: mirror,
    affects: [SpecSimCam, ARSimCam],
    init: {axes: ["x", "y", "rz", "ry"]}, # rz = yaw, ry = pitch
    properties: {
        speed: {"x": 0.1, "y": 0.1, "rz": 0.1, "ry": 0.1} #m/s
    }
}


