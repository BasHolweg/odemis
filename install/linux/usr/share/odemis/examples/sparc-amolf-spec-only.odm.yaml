# Configuration for the SPARC system at AMOLF, with only the spectrometer
# The main difference with the typical SPARC is that camera are Princeton-Instruments.
SPARC-AMOLF: {
    class: Microscope,
    role: sparc,
    emitters: ["EBeam ExtXY"],
    detectors: ["SED ExtXY", "Spec10"],
    actuators: ["MirrorMover"],
}

# Quanta SEM driven via external X/Y connection, using a DAQ board
"SEM ExtXY": {
    class: semcomedi.SEMComedi,
    role: none,
    init: {device: "/dev/comedi0"},
    # more detectors can be added, if necessary
    children: {scanner: "EBeam ExtXY", detector0: "SED ExtXY"}
}

# Connect:
# X -> AO 0
# Y -> AO 1
# Ground -> AO GND
"EBeam ExtXY": {
    # Internal child of SEM ExtXY, so no class
    role: e-beam,
    init: {
        channels: [0, 1],
        limits: [[2.7, -2.7], [-3.7, 3.7]],  # V
        park: [4, -4],  # V (higher voltage causes strong beam shift)
        settle_time: 150.e-6, # s
        hfw_nomag: 0.1067, # m
    },
    properties: {
        scale: [8, 8], # (ratio) : start with a pretty fast scan
        dwellTime: 10.e-6, # s
        magnification: 244, # (ratio)
    },
    affects: ["SED ExtXY", SpecCam] # affects the CCD in case of cathodoluminescence
}

# Must be connected on AI 0/AI GND
"SED ExtXY": { # aka ETD
    # Internal child of Quanta ExtXY, so no class
    role: se-detector,
    init: {
        channel: 0,
        limits: [-3, 3] # V
    },
}

Spec10: {
    class: spectrometer.CompositedSpectrometer,
    role: spectrometer,
    children: {detector: "SpecCam", spectrograph: "SP2300i"}
}

SpecCam: {
    class: pvcam.PVCam,
    role: sp-ccd,
    init: {device: "rspist133"}
}

# SP-2300i, the spectrograph part of the Spec-10
SP2300i: {
    class: spectrapro.SpectraPro,
    role: spectrograph,
    affects: [SpecCam],
    init: {
        port: "/dev/ttySP",
    },
}

# We could put the real actuators, but they would not be so useful as there is no feedback to know if the move is correct
MirrorMover: {
    class: simulated.Stage,
    role: mirror,
    affects: [SpecCam],
    init: {axes: ["x", "y", "rz", "ry"]}, # rz = yaw, ry = pitch
    properties: {
        speed: {"x": 0.1, "y": 0.1, "rz": 0.1, "ry": 0.1} #m/s
    }
}


