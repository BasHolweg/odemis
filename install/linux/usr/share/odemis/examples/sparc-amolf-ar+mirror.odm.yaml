# Configuration for the SPARC system at AMOLF, with only the angle resolved camera
# The main difference with the typical SPARC is that camera are Princeton-Instruments.
SPARC-AMOLF: {
    class: Microscope,
    role: sparc,
    emitters: ["EBeam ExtXY", "AR Lens"],
    detectors: ["SED ExtXY", "ARCam"],
    actuators: ["MirrorMover"],
}

# Quanta SEM driven via external X/Y connection, using a DAQ board
"SEM ExtXY": {
    class: semcomedi.SEMComedi,
    role: none,
    init: {device: "/dev/comedi0"},
    # more detectors can be added, if necessary
    children: {scanner: "EBeam ExtXY", detector0: "SED ExtXY"}
}

# Connect:
# X -> AO 0
# Y -> AO 1
# Ground -> AO GND
"EBeam ExtXY": {
    # Internal child of SEM ExtXY, so no class
    role: e-beam,
    init: {
        channels: [0, 1],
        limits: [[2.7, -2.7], [-3.7, 3.7]],  # V
        park: [4, -4],  # V (higher voltage causes strong beam shift)
        settle_time: 150.e-6, # s
        hfw_nomag: 0.1067, # m
    },
    properties: {
        scale: [8, 8], # (ratio) : start with a pretty fast scan
        dwellTime: 10.e-6, # s
        magnification: 244, # (ratio)
    },
    affects: ["SED ExtXY", ARCam] # affects the CCD in case of cathodoluminescence
}

# Must be connected on AI 0/AI GND
"SED ExtXY": { # aka ETD
    # Internal child of Quanta ExtXY, so no class
    role: se-detector,
    init: {
        channel: 0,
        limits: [-3, 3] # V
    },
}

"AR Lens": {
    class: static.OpticalLens,
    role: lens,
    init: {mag: 0.4917, # ratio
           pole_pos: [458, 519], # (px, px), position of the pole (aka the hole in the mirror)
          }, 
    affects: ["ARCam"]
}


# PIXIS via USB
ARCam: {
    class: pvcam.PVCam,
    role: ccd,
    init: {
           device: "rspipixis", # use 0 if this symlink is no created
           transpose: [-1, -2], # mirrored on Y axis
           }
}

#Spec10: {
#    class: spectrometer.CompositedSpectrometer,
#    role: spectrometer,
#    children: {detector: "SpecCam", spectrograph: "FakeSP2300i"},
#    properties: {
#        binning: [4, 16],
#    },
#}

#SpecCam: {
#    class: andorcam2.FakeAndorCam2,
#    role: sp-ccd,
#    init: {device: 0} # same device number but it will actually be different device
#}

## Simulated SP-2300i, the spectrograph part of the Spec-10
#FakeSP2300i: {
#    class: spectrapro.FakeSpectraPro,
#    role: spectrograph,
#    affects: [SpecCam],
#    init: {
#        port: "/dev/ttySP",
#    },
#}

# PI E-861 jumpers (. = off):
# X          = 1234.6..
# Y          = 123..6..
# RZ (yaw)   = 12.4.6..
# RY (pitch) = 12...6..
MirrorMover: {
    class: pigcs.Bus,
    role: mirror,
    affects: [ARCam],
    init: {
        port: "/dev/ttyPIGCS",
        baudrate: 9600,
        # X/Y are same axes as SEM
        # yaw/pitch are axes according to Mirror's orientation
        # rz = yaw, ry = pitch (from Mirror's point of view)
        # axis -> controller, channel, closed-loop?
        axes: {"y":  [1, 1, False],
               "x":  [2, 1, False],
               "ry": [3, 1, False],
               "rz": [4, 1, False]},
        inverted: ["y", "ry"],
    },
    properties: {
        speed: {"x": 0.1, "y": 0.1, "rz": 0.1, "ry": 0.1} # m/s
    }
}


