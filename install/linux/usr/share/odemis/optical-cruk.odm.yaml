Optical: {
    class: Microscope,
    role: optical,
    emitters: [LightHub, "Nikon Lens", "MultiBand Fixed Filter"],
    detectors: [Clara],
    actuators: ["OLStage", "SEM-Optical Alignment", "OpticalZ actuator"],
}

# Omicron lasers (they provide directly information about their wavelength)
LightHub: {
    class: omicronxx.MultixX,
    role: light,
    init: {
        ports: "/dev/ttyOXX*",
        },
    affects: [Clara],
}

"Nikon Lens": {
    class: static.OpticalLens,
    role: lens,
    init: {mag: 150.0}, # ratio (actually of the complete light path)
    affects: [Clara]
}

# Semrock FF01-524/628-25
"MultiBand Fixed Filter": {
    class: static.LightFilter,
    role: filter,
    init: {band: [[509.e-9, 539.e-9],
                  [611.e-9, 644.e-9]]}, # m,m
    affects: [Clara]
}

# Axes: X is horizontal on screen (going left->right), physical: far->close when looking at the door
#       Y is vertical on screen (going bottom->top), physical: left->right when looking at the door
Clara: { # Also works with iXon Ultra
    class: andorcam2.AndorCam2,
    role: ccd,
    init: {
        device: 0, # the only Andor camera connected so always 0
        transpose: [2, -1], # rotation by 90Â°
    }, 
    properties: {
        exposureTime: 0.3, # s
    }
}

# Use 3 CombinedActuators to separate the axes of the PIGCS over different roles

# Axes should be synchronized with the camera
# Stage axes are moving the sample, so they should opposite direction than convention
# (so the stage "position" is the current position observed)
"OLStage": {
    class: CombinedActuator,
    role: stage,
    affects: [Clara],
    children: {"x": PIGCS, "y": PIGCS},
    init: {
        axes_map: {"x": "x", "y": "y"},
        inverted: ["x"],
    },
    properties: {
        speed: {'x': 0.01, 'y': 0.01} #m/s (low enough to ensure we always use the minimum voltage, but about right, to not wait too long)
    }
}

"SEM-Optical Alignment": {
    class: CombinedActuator,
    role: align,
    affects: [Clara],
    children: {"a": PIGCS, "b": PIGCS},
    init: {
        axes_map: {"a": "a", "b": "b"},
#        inverted: ["a", "b"],
    },
    properties: {
        speed: {'a': 0.001, 'b': 0.001} #m/s
    }
}

# Axis Z: (Physical) bottom->top when looking at the door
#         (On screen) bottom->top (so distance to sample is smaller when going up)
"OpticalZ actuator": {
    class: CombinedActuator,
    role: focus,
    affects: [Clara],
    children: {"z": PIGCS},
    init: {
        axes_map: {"z": "z"}
    },
    properties: {
        speed: {'z': 0.01} #m/s
    }
}

# Simulated stage
PIGCS: {
    class: simulated.Stage,
    role: AlignAndFocus,
    init: {axes: ["a", "b", "z", "x", "y"]},
}

