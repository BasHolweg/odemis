#!/bin/bash
# Stop the gui and back-end in any case

. /etc/odemis.conf

export PYTHONPATH

# kill the GUI if it's already there
if pgrep -f $GUI > /dev/null; then
    pkill -f $GUI
fi


# Stop the backend
BEP_PID=$(pgrep odemisd) # parent PID
BE_PIDS=$(pgrep -f $BACKEND)
if [ -n "$BE_PIDS" ]; then
    # try nicely
    odemis-cli --kill

    sleep 3 # wait for the backend to finish peacefully
    # in case it's still there => kill
    if pgrep -f $BACKEND > /dev/null; then
        echo "Back-end still running, killing it..."
        # TODO: only use sudo if the backend is running as root
        # Only kill the old processes, so that if the user has started a new
        # instance in the mean time, it doesn't get killed
        # We use pkill so that it can be authorized by a sudoer command
        #sudo /bin/kill $BE_PIDS
        sudo pkill -P $BEP_PID,${BE_PIDS//$'\n'/,} -f $BACKEND

        sleep 1
        # Try even harder
        if pgrep -f $BACKEND > /dev/null; then
            sudo pkill -CONT -P $BEP_PID,${BE_PIDS//$'\n'/,} -f $BACKEND
            sudo pkill -KILL -P $BEP_PID,${BE_PIDS//$'\n'/,} -f $BACKEND
    fi
    fi
fi

RUN_DIR="/var/run/odemisd"

# clean up
if [ -e "$RUN_DIR" ]; then
	# try only if there is something worthy to delete (ie, dir is not empty)
	if ! find "$RUN_DIR" -maxdepth 0 -empty | read v; then
	    sudo rm -rf "$RUN_DIR"/*
	fi
fi
