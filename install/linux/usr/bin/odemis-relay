#!/usr/bin/env python
# -*- coding: utf-8 -*-
'''
Created on 25 Jun 2015

@author: Kimon Tsitsikas

Copyright Â© 2015 Kimon Tsitsikas, Delmic

This file is part of Odemis.

Odemis is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License version 2 as published by the Free Software Foundation.

Odemis is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with Odemis. If not, see http://www.gnu.org/licenses/.
'''

import logging
import os
import sys
import serial
import time
logging.getLogger().setLevel(logging.DEBUG)

def main(args):
    """
    Handles the command line arguments
    args is the list of arguments passed
    return (int): value to return to the OS as program exit code
    """
    port = "/dev/" + args[1]
    # For now just turn on
    # value = args[2]
    value = 1 # on

    # Connect to serial device
    ser = serial.Serial(
        port=port,
        baudrate=115200,
        timeout=5  # s
    )

    # Purge
    ser.flush()
    ser.flushInput()
    time.sleep(0.05)  # 50 ms

    # Prepare the port
    ser.setRTS()

    # check IDN to make sure it is the correct HW
    cmd = "*IDN?\n"
    ser.write(cmd)
    ans = ''
    char = None
    while (char != '\n'):
        char = ser.read()
        ans += char
    if ans.startswith("Delmic Analog PMT version"):
        # Send command
        cmd = "RELAY %s\n" % (value,)
        ser.write(cmd)

    return 0

if __name__ == '__main__':
    try:
        ret = main(sys.argv)
    except Exception:
        logging.exception("Failure during execution.")
        ret = 128
    exit(ret)
