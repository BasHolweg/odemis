#!/bin/bash
# Start the backend, with memory limit if possible

. /etc/odemis.conf

RUNNER=""

MEMLIM_FILE=/sys/fs/cgroup/memory/odemisd/memory.limit_in_bytes
MEMSWLIM_FILE=/sys/fs/cgroup/memory/odemisd/memory.memsw.limit_in_bytes
# make sure we don't use too much memory
if [ -d /sys/fs/cgroup/memory/odemisd -a -x /usr/bin/cgexec -a -f "$MEMLIM_FILE" ]; then
    MAXMEM=$(( 2 * 1024 * 1024 * 1024 )) # 2Gb
    # ulimit doesn't work because it can only specify virtual memory, which is extremely unpredictable for multiple processes
    #ulimit -S -d $MAXMEM -v $(( 2 * $MAXMEM ))
    
    if [[ "$(<"$MEMLIM_FILE")" -le $MAXMEM && -f "$MEMSWLIM_FILE" && "$(<$MEMSWLIM_FILE)" -le $MAXMEM ]]; then
        # everything is already fine
        RUNNER="/usr/bin/cgexec -g memory:odemisd"
    else
        # try to do it ourselves
        echo $MAXMEM > "$MEMLIM_FILE"
        [ -f "$MEMSWLIM_FILE" ] && echo $MAXMEM > "$MEMSWLIM_FILE"
        status=$?
        if [[ $status == 0 ]]; then
            RUNNER="/usr/bin/cgexec -g memory:odemisd"
        fi
    fi
fi

if [ "$RUNNER" == "" ]; then
    echo "Warning: failed to set memory limit protection for odemisd"
    echo "Ensure you have odemisd cgroup available"
    # that should do it:
    # sudo cgcreate -a $USER -g memory:odemisd
fi

export PYTHONPATH
$RUNNER python2.7 -m $BACKEND "$@"
