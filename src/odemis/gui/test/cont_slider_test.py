#-*- coding: utf-8 -*-

"""
@author: Rinze de Laat

Copyright Â© 2012 Rinze de Laat, Delmic

This file is part of Odemis.

Odemis is free software: you can redistribute it and/or modify it under the terms
of the GNU General Public License version 2 as published by the Free Software
Foundation.

Odemis is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
Odemis. If not, see http://www.gnu.org/licenses/.

"""

#===============================================================================
# Test module for Odemis' gui.cont.slider module
#===============================================================================

from odemis.gui import test
import odemis.gui.cont.slider as slidercont
import odemis.gui.test as test
import odemis.gui as gui

import logging
import math
import odemis.gui.test.test_gui
import unittest
import wx

test.goto_manual() # Keep the test frame open after the tests are run
logging.getLogger().setLevel(logging.DEBUG)

DATA = [0.0, 0.006283143965558951, 0.012566039883352607, 0.018848439715408175, 0.02513009544333748, 0.03141075907812829, 0.03769018266993454, 0.04396811831786491, 0.050244318179769556, 0.05651853448202453, 0.06279051952931337, 0.0690600257144058, 0.07532680552793272, 0.08159061156815754, 0.08785119655074318, 0.09410831331851433, 0.1003617148512149, 0.10661115427525991, 0.11285638487348168, 0.11909716009486974, 0.12533323356430426, 0.1315643590922825, 0.13779029068463808, 0.14401078255225216, 0.15022558912075706, 0.15643446504023087, 0.16263716519488358, 0.1688334447127339, 0.17502305897527606, 0.18120576362713736, 0.18738131458572463, 0.19354946805086026, 0.19970998051440703, 0.20586260876988133, 0.21200710992205463, 0.21814324139654254, 0.22427076094938117, 0.23038942667659057, 0.2364989970237247, 0.24259923079540743, 0.2486898871648548, 0.25477072568338216, 0.26084150628989694, 0.26690198932037557, 0.2729519355173252, 0.2789911060392293, 0.2850192624699761, 0.2910361668282718, 0.2970415815770349, 0.30303526963277394, 0.3090169943749474, 0.3149865196553048, 0.3209436098072095, 0.32688802965494246, 0.3328195445229867, 0.3387379202452914, 0.34464292317451706, 0.350534320191259, 0.35641187871325075, 0.3622753667045457, 0.368124552684678, 0.37395920573780045, 0.3797790955218011, 0.38558399227739654, 0.3913736668372024, 0.3971478906347806, 0.40290643571366264, 0.40864907473634904, 0.41437558099328414, 0.42008572841180625, 0.42577929156507266, 0.43145604568095897, 0.4371157666509329, 0.4427582310389015, 0.44838321609003223, 0.4539904997395468, 0.45957986062148787, 0.46515107807745837, 0.4707039321653326, 0.4762382036679391, 0.4817536741017153, 0.4872501257253323, 0.49272734154829156, 0.4981851053394908, 0.5036232016357608, 0.5090414157503713, 0.5144395337815064, 0.5198173426207096, 0.5251746299612957, 0.530511184306734, 0.5358267949789967, 0.5411212521268759, 0.5463943467342691, 0.5516458706284303, 0.556875616488188, 0.5620833778521306, 0.5672689491267565, 0.5724321255945909, 0.5775727034222676, 0.5826904796685761, 0.5877852522924731, 0.5928568201610592, 0.5979049830575188, 0.6029295416890247, 0.6079302976946054, 0.6129070536529765, 0.6178596130903343, 0.6227877804881126, 0.6276913612907006, 0.6325701619131244, 0.6374239897486897, 0.6422526531765844, 0.6470559615694443, 0.6518337253008788, 0.6565857557529565, 0.6613118653236518, 0.6660118674342517, 0.67068557653672, 0.6753328081210245, 0.6799533787224192, 0.6845471059286887, 0.6891138083873485, 0.693653305812805, 0.6981654189934726, 0.7026499697988492, 0.7071067811865475, 0.7115356772092853, 0.7159364830218311, 0.7203090248879069, 0.7246531301870467, 0.7289686274214116, 0.7332553462225601, 0.7375131173581739, 0.7417417727387392, 0.7459411454241821, 0.7501110696304596, 0.7542513807361038, 0.7583619152887219, 0.7624425110114479, 0.7664930068093498, 0.7705132427757893, 0.7745030601987338, 0.7784623015670235, 0.7823908105765881, 0.7862884321366189, 0.7901550123756904, 0.7939903986478353, 0.797794439538571, 0.8015669848708765, 0.805307885711122, 0.8090169943749475, 0.812694164433094, 0.8163392507171839, 0.8199521093254524, 0.8235325976284275, 0.8270805742745618, 0.8305958991958127, 0.8340784336131711, 0.8375280400421418, 0.840944582298169, 0.8443279255020151, 0.8476779360850832, 0.8509944817946918, 0.8542774316992952, 0.8575266561936523, 0.8607420270039436, 0.8639234171928353, 0.86707070116449, 0.8701837546695257, 0.8732624548099202, 0.8763066800438636, 0.8793163101905562, 0.8822912264349533, 0.8852313113324553, 0.8881364488135446, 0.8910065241883678, 0.8938414241512638, 0.8966410367852359, 0.8994052515663711, 0.9021339593682028, 0.9048270524660196, 0.907484424541117, 0.9101059706849958, 0.9126915874035028, 0.9152411726209175, 0.9177546256839811, 0.9202318473658704, 0.9226727398701148, 0.925077206834458, 0.9274451533346614, 0.9297764858882515, 0.932071112458211, 0.934328942456612, 0.9365498867481924, 0.9387338576538741, 0.9408807689542256, 0.9429905358928644, 0.9450630751798048, 0.9470983049947443, 0.9490961449902946, 0.9510565162951535, 0.9529793415172189, 0.954864544746643, 0.9567120515588305, 0.9585217890173758, 0.9602936856769431, 0.9620276715860859, 0.9637236782900097, 0.9653816388332739, 0.967001487762435, 0.9685831611286311, 0.9701265964901059, 0.9716317329146739, 0.9730985109821265, 0.9745268727865771, 0.9759167619387474, 0.9772681235681935, 0.9785809043254721, 0.9798550523842469, 0.9810905174433341, 0.9822872507286887, 0.9834452049953297, 0.9845643345292053, 0.985644595148998, 0.986685944207868, 0.9876883405951378, 0.9886517447379141, 0.9895761186026509, 0.9904614256966512, 0.9913076310695066, 0.9921147013144779, 0.9928826045698137, 0.9936113105200084, 0.9943007903969989, 0.9949510169813002, 0.99556196460308, 0.9961336091431725, 0.9966659280340299, 0.9971589002606139, 0.9976125063612252, 0.9980267284282716, 0.998401550108975, 0.9987369566060175, 0.9990329346781247, 0.9992894726405892, 0.9995065603657316, 0.9996841892832999, 0.999822352380809, 0.9999210442038161, 0.9999802608561371, 1.0, 0.9999802608561371, 0.9999210442038161, 0.999822352380809, 0.9996841892832999, 0.9995065603657316, 0.9992894726405892, 0.9990329346781247, 0.9987369566060175, 0.998401550108975, 0.9980267284282716, 0.9976125063612252, 0.9971589002606139, 0.9966659280340299, 0.9961336091431725, 0.99556196460308, 0.9949510169813002, 0.9943007903969989, 0.9936113105200084, 0.9928826045698137, 0.9921147013144778, 0.9913076310695066, 0.9904614256966512, 0.9895761186026509, 0.988651744737914, 0.9876883405951378, 0.986685944207868, 0.985644595148998, 0.9845643345292053, 0.9834452049953296, 0.9822872507286887, 0.9810905174433341, 0.9798550523842469, 0.9785809043254721, 0.9772681235681935, 0.9759167619387474, 0.9745268727865771, 0.9730985109821265, 0.971631732914674, 0.9701265964901058, 0.9685831611286311, 0.967001487762435, 0.9653816388332739, 0.9637236782900097, 0.9620276715860859, 0.9602936856769431, 0.958521789017376, 0.9567120515588304, 0.954864544746643, 0.9529793415172187, 0.9510565162951535, 0.9490961449902946, 0.9470983049947442, 0.9450630751798048, 0.9429905358928644, 0.9408807689542255, 0.9387338576538741, 0.9365498867481923, 0.934328942456612, 0.932071112458211, 0.9297764858882513, 0.9274451533346613, 0.925077206834458, 0.9226727398701149, 0.9202318473658704, 0.9177546256839811, 0.9152411726209175, 0.9126915874035029, 0.9101059706849957, 0.9074844245411169, 0.9048270524660195, 0.9021339593682027, 0.899405251566371, 0.8966410367852358, 0.8938414241512639, 0.8910065241883679, 0.8881364488135446, 0.8852313113324553, 0.8822912264349533, 0.8793163101905562, 0.8763066800438635, 0.87326245480992, 0.8701837546695257, 0.8670707011644901, 0.8639234171928354, 0.8607420270039436, 0.8575266561936522, 0.8542774316992952, 0.8509944817946917, 0.8476779360850831, 0.8443279255020152, 0.8409445822981692, 0.8375280400421418, 0.8340784336131712, 0.8305958991958127, 0.8270805742745617, 0.8235325976284273, 0.8199521093254523, 0.8163392507171838, 0.8126941644330941, 0.8090169943749475, 0.805307885711122, 0.8015669848708765, 0.797794439538571, 0.7939903986478353, 0.7901550123756903, 0.7862884321366188, 0.7823908105765882, 0.7784623015670235, 0.7745030601987338, 0.7705132427757893, 0.7664930068093498, 0.7624425110114478, 0.7583619152887218, 0.7542513807361036, 0.7501110696304594, 0.7459411454241822, 0.7417417727387392, 0.7375131173581739, 0.73325534622256, 0.7289686274214114, 0.7246531301870466, 0.7203090248879067, 0.715936483021831, 0.7115356772092855, 0.7071067811865476, 0.7026499697988492, 0.6981654189934726, 0.6936533058128049, 0.6891138083873484, 0.6845471059286885, 0.679953378722419, 0.6753328081210246, 0.6706855765367201, 0.6660118674342517, 0.6613118653236518, 0.6565857557529564, 0.6518337253008787, 0.6470559615694442, 0.6422526531765842, 0.6374239897486895, 0.6325701619131245, 0.6276913612907006, 0.6227877804881126, 0.6178596130903343, 0.6129070536529764, 0.6079302976946053, 0.6029295416890246, 0.5979049830575187, 0.5928568201610593, 0.5877852522924732, 0.5826904796685761, 0.5775727034222676, 0.5724321255945908, 0.5672689491267564, 0.5620833778521305, 0.5568756164881878, 0.55164587062843, 0.5463943467342692, 0.5411212521268759, 0.5358267949789967, 0.530511184306734, 0.5251746299612956, 0.5198173426207093, 0.5144395337815063, 0.5090414157503711, 0.5036232016357609, 0.4981851053394909, 0.4927273415482916, 0.4872501257253323, 0.4817536741017152, 0.476238203667939, 0.4707039321653324, 0.46515107807745815, 0.459579860621488, 0.45399049973954686, 0.4483832160900323, 0.44275823103890155, 0.4371157666509329, 0.43145604568095886, 0.4257792915650725, 0.4200857284118061, 0.4143755809932839, 0.40864907473634915, 0.40290643571366275, 0.3971478906347806, 0.39137366683720237, 0.3855839922773965, 0.379779095521801, 0.3739592057378003, 0.36812455268467775, 0.3622753667045458, 0.3564118787132508, 0.350534320191259, 0.34464292317451706, 0.3387379202452913, 0.3328195445229865, 0.3268880296549423, 0.32094360980720926, 0.31498651965530455, 0.3090169943749475, 0.30303526963277405, 0.2970415815770349, 0.29103616682827177, 0.28501926246997605, 0.2789911060392291, 0.27295193551732505, 0.2669019893203753, 0.26084150628989705, 0.25477072568338227, 0.24868988716485482, 0.2425992307954074, 0.2364989970237246, 0.23038942667659046, 0.224270760949381, 0.21814324139654231, 0.2120071099220548, 0.2058626087698814, 0.19970998051440705, 0.19354946805086026, 0.18738131458572457, 0.18120576362713725, 0.17502305897527587, 0.16883344471273365, 0.16263716519488333, 0.15643446504023098, 0.15022558912075712, 0.14401078255225216, 0.13779029068463802, 0.1315643590922824, 0.1253332335643041, 0.11909716009486954, 0.11285638487348143, 0.10661115427526005, 0.10036171485121498, 0.09410831331851435, 0.08785119655074315, 0.08159061156815747, 0.0753268055279326, 0.06906002571440562, 0.06279051952931314, 0.056518534482024235, 0.05024431817976966, 0.04396811831786495, 0.037690182669934534, 0.031410759078128236, 0.02513009544333737, 0.018848439715408016, 0.012566039883352392, 0.006283143965558683]
SLEEP_TIME = 1000 #Set to None to use default, sort sleep time

def gen_data():
    r = []
    w = 500

    for i in xrange(w):
        r.append(math.sin(i * (math.pi / w)))

    print r

class ContrSliderTestCase(test.GuiTestCase):

    frame_class = odemis.gui.test.test_gui.xrccanvas_frame

    def test_spectogram_slider(self):
        slider = slidercont.SpectrogramSlider(
                                        self.panel,
                                        value=(300e-9, 500e-9),
                                        min_val=100e-9,
                                        max_val=700e-9,
        )
        slider.SetBackgroundColour(gui.BACKGROUND_COLOUR)
        self.add_control(slider, wx.EXPAND)

        test.gui_loop()
        test.sleep()

        slider.SetContent(DATA)

        test.gui_loop()
        test.sleep(SLEEP_TIME)

        slider.set_center_value(500e-9)

        test.gui_loop()
        test.sleep(SLEEP_TIME)

        slider.set_bandwidth_value(100e-9)

    def test_histogram_slider(self):
        slider = slidercont.HistogramSlider(
                                        self.panel,
        )
        slider.SetBackgroundColour(gui.BACKGROUND_COLOUR)
        self.add_control(slider, wx.EXPAND)

        test.gui_loop()
        test.sleep()

        slider.SetContent(DATA)

        test.gui_loop()
        test.sleep(SLEEP_TIME)

        slider.SetValue((0, 100))

        test.gui_loop()
        test.sleep(SLEEP_TIME)

        slider.SetValue((100, 255))

if __name__ == "__main__":
    # gen_data()
    unittest.main()
