# This file was automatically generated by pywxrc.
# -*- coding: UTF-8 -*-

import wx
import wx.xrc as xrc

__res = None

def get_resources():
    """ This function provides access to the XML resources in this module."""
    global __res
    if __res == None:
        __init_resources()
    return __res




class xrcfr_main(wx.Frame):
#!XRCED:begin-block:xrcfr_main.PreCreate
    def PreCreate(self, pre):
        """ This function is called during the class's initialization.

        Override it for custom setup before the window is created usually to
        set additional window styles using SetWindowStyle() and SetExtraStyle().
        """
        pass

#!XRCED:end-block:xrcfr_main.PreCreate

    def __init__(self, parent):
        # Two stage creation (see http://wiki.wxpython.org/index.cgi/TwoStageCreation)
        pre = wx.PreFrame()
        self.PreCreate(pre)
        get_resources().LoadOnFrame(pre, parent, "fr_main")
        self.PostCreate(pre)

        # Define variables for the controls, bind event handlers
        self.menu_item_open = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_open"))
        self.menu_item_snapshot = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_snapshot"))
        self.menu_item_snapshot_as = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_snapshot_as"))
        self.menu_item_reset_finealign = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_reset_finealign"))
        self.menu_item_halt = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_halt"))
        self.menu_item_quit = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_quit"))
        self.menu_item_22view = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_22view"))
        self.menu_item_play_stream = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_play_stream"))
        self.menu_item_fit_content = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_fit_content"))
        self.menu_item_auto_cont = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_auto_cont"))
        self.menu_item_auto_focus = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_auto_focus"))
        self.menu_item_cross = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_cross"))
        self.menu_item_manual = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_manual"))
        self.menu_item_devmanual = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_devmanual"))
        self.menu_item_inspect = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_inspect"))
        self.menu_item_debug = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_debug"))
        self.menu_item_bugreport = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_bugreport"))
        self.menu_item_about = self.GetMenuBar().FindItemById(xrc.XRCID("menu_item_about"))
        self.btn_tab_secom_streams = xrc.XRCCTRL(self, "btn_tab_secom_streams")
        self.btn_tab_sparc_acqui = xrc.XRCCTRL(self, "btn_tab_sparc_acqui")
        self.btn_tab_inspection = xrc.XRCCTRL(self, "btn_tab_inspection")
        self.btn_tab_secom_align = xrc.XRCCTRL(self, "btn_tab_secom_align")
        self.btn_tab_sparc_chamber = xrc.XRCCTRL(self, "btn_tab_sparc_chamber")
        self.btn_tab_sparc_align = xrc.XRCCTRL(self, "btn_tab_sparc_align")
        self.logo = xrc.XRCCTRL(self, "logo")
        self.pnl_log = xrc.XRCCTRL(self, "pnl_log")
        self.txt_log = xrc.XRCCTRL(self, "txt_log")



class xrcpnl_tab_secom_align(wx.Panel):
#!XRCED:begin-block:xrcpnl_tab_secom_align.PreCreate
    def PreCreate(self, pre):
        """ This function is called during the class's initialization.

        Override it for custom setup before the window is created usually to
        set additional window styles using SetWindowStyle() and SetExtraStyle().
        """
        pass

#!XRCED:end-block:xrcpnl_tab_secom_align.PreCreate

    def __init__(self, parent):
        # Two stage creation (see http://wiki.wxpython.org/index.cgi/TwoStageCreation)
        pre = wx.PrePanel()
        self.PreCreate(pre)
        get_resources().LoadOnPanel(pre, parent, "pnl_tab_secom_align")
        self.PostCreate(pre)

        # Define variables for the controls, bind event handlers
        self.lens_align_slider_aligner = xrc.XRCCTRL(self, "lens_align_slider_aligner")
        self.pnl_ab_align = xrc.XRCCTRL(self, "pnl_ab_align")
        self.lens_align_btn_m_aligner_b = xrc.XRCCTRL(self, "lens_align_btn_m_aligner_b")
        self.lens_align_btn_p_aligner_a = xrc.XRCCTRL(self, "lens_align_btn_p_aligner_a")
        self.lens_align_btn_m_aligner_a = xrc.XRCCTRL(self, "lens_align_btn_m_aligner_a")
        self.lens_align_btn_p_aligner_b = xrc.XRCCTRL(self, "lens_align_btn_p_aligner_b")
        self.pnl_xy_align = xrc.XRCCTRL(self, "pnl_xy_align")
        self.lens_align_btn_p_aligner_y = xrc.XRCCTRL(self, "lens_align_btn_p_aligner_y")
        self.lens_align_btn_m_aligner_y = xrc.XRCCTRL(self, "lens_align_btn_m_aligner_y")
        self.lens_align_btn_m_aligner_x = xrc.XRCCTRL(self, "lens_align_btn_m_aligner_x")
        self.lens_align_btn_p_aligner_x = xrc.XRCCTRL(self, "lens_align_btn_p_aligner_x")
        self.pnl_move_to_center = xrc.XRCCTRL(self, "pnl_move_to_center")
        self.lens_align_lbl_approc_center = xrc.XRCCTRL(self, "lens_align_lbl_approc_center")
        self.lens_align_btn_to_center = xrc.XRCCTRL(self, "lens_align_btn_to_center")
        self.pnl_align_tools = xrc.XRCCTRL(self, "pnl_align_tools")
        self.btn_auto_center = xrc.XRCCTRL(self, "btn_auto_center")
        self.lbl_auto_center = xrc.XRCCTRL(self, "lbl_auto_center")
        self.gauge_auto_center = xrc.XRCCTRL(self, "gauge_auto_center")
        self.btn_fine_align = xrc.XRCCTRL(self, "btn_fine_align")
        self.lbl_fine_align = xrc.XRCCTRL(self, "lbl_fine_align")
        self.gauge_fine_align = xrc.XRCCTRL(self, "gauge_fine_align")
        self.html_alignment_doc = xrc.XRCCTRL(self, "html_alignment_doc")
        self.vp_align_ccd = xrc.XRCCTRL(self, "vp_align_ccd")
        self.lens_align_btn_sem = xrc.XRCCTRL(self, "lens_align_btn_sem")
        self.lens_align_btn_opt = xrc.XRCCTRL(self, "lens_align_btn_opt")
        self.cmb_lens_align_presets = xrc.XRCCTRL(self, "cmb_lens_align_presets")
        self.scr_win_right = xrc.XRCCTRL(self, "scr_win_right")
        self.fp_lens_opt_settings = xrc.XRCCTRL(self, "fp_lens_opt_settings")
        self.pnl_secom_align_streams = xrc.XRCCTRL(self, "pnl_secom_align_streams")
        self.fp_lens_sem_settings = xrc.XRCCTRL(self, "fp_lens_sem_settings")
        self.pnl_sem_toolbar = xrc.XRCCTRL(self, "pnl_sem_toolbar")
        self.lens_align_tb = xrc.XRCCTRL(self, "lens_align_tb")
        self.vp_align_sem = xrc.XRCCTRL(self, "vp_align_sem")



class xrcpnl_tab_sparc_align(wx.Panel):
#!XRCED:begin-block:xrcpnl_tab_sparc_align.PreCreate
    def PreCreate(self, pre):
        """ This function is called during the class's initialization.

        Override it for custom setup before the window is created usually to
        set additional window styles using SetWindowStyle() and SetExtraStyle().
        """
        pass

#!XRCED:end-block:xrcpnl_tab_sparc_align.PreCreate

    def __init__(self, parent):
        # Two stage creation (see http://wiki.wxpython.org/index.cgi/TwoStageCreation)
        pre = wx.PrePanel()
        self.PreCreate(pre)
        get_resources().LoadOnPanel(pre, parent, "pnl_tab_sparc_align")
        self.PostCreate(pre)

        # Define variables for the controls, bind event handlers
        self.pnl_alignment_btns = xrc.XRCCTRL(self, "pnl_alignment_btns")
        self.btn_align_chamber = xrc.XRCCTRL(self, "btn_align_chamber")
        self.btn_align_mirror = xrc.XRCCTRL(self, "btn_align_mirror")
        self.btn_align_fiber = xrc.XRCCTRL(self, "btn_align_fiber")
        self.pnl_sparc_trans = xrc.XRCCTRL(self, "pnl_sparc_trans")
        self.mirror_align_slider_mirror_x = xrc.XRCCTRL(self, "mirror_align_slider_mirror_x")
        self.mirror_align_slider_mirror_y = xrc.XRCCTRL(self, "mirror_align_slider_mirror_y")
        self.mirror_align_btn_p_mirror_y = xrc.XRCCTRL(self, "mirror_align_btn_p_mirror_y")
        self.mirror_align_btn_m_mirror_y = xrc.XRCCTRL(self, "mirror_align_btn_m_mirror_y")
        self.mirror_align_btn_p_mirror_x = xrc.XRCCTRL(self, "mirror_align_btn_p_mirror_x")
        self.mirror_align_btn_m_mirror_x = xrc.XRCCTRL(self, "mirror_align_btn_m_mirror_x")
        self.pnl_sparc_rot = xrc.XRCCTRL(self, "pnl_sparc_rot")
        self.mirror_align_slider_mirror_r = xrc.XRCCTRL(self, "mirror_align_slider_mirror_r")
        self.mirror_align_btn_m_mirror_ry = xrc.XRCCTRL(self, "mirror_align_btn_m_mirror_ry")
        self.mirror_align_btn_p_mirror_ry = xrc.XRCCTRL(self, "mirror_align_btn_p_mirror_ry")
        self.mirror_align_btn_m_mirror_rz = xrc.XRCCTRL(self, "mirror_align_btn_m_mirror_rz")
        self.mirror_align_btn_p_mirror_rz = xrc.XRCCTRL(self, "mirror_align_btn_p_mirror_rz")
        self.pnl_sparc_fib = xrc.XRCCTRL(self, "pnl_sparc_fib")
        self.mirror_align_slider_fibaligner = xrc.XRCCTRL(self, "mirror_align_slider_fibaligner")
        self.mirror_align_btn_p_fibaligner_y = xrc.XRCCTRL(self, "mirror_align_btn_p_fibaligner_y")
        self.mirror_align_btn_m_fibaligner_y = xrc.XRCCTRL(self, "mirror_align_btn_m_fibaligner_y")
        self.mirror_align_btn_m_fibaligner_x = xrc.XRCCTRL(self, "mirror_align_btn_m_fibaligner_x")
        self.mirror_align_btn_p_fibaligner_x = xrc.XRCCTRL(self, "mirror_align_btn_p_fibaligner_x")
        self.vp_sparc_align = xrc.XRCCTRL(self, "vp_sparc_align")
        self.scr_win_right = xrc.XRCCTRL(self, "scr_win_right")
        self.fp_ma_settings_ar = xrc.XRCCTRL(self, "fp_ma_settings_ar")
        self.pnl_sparc_align_streams = xrc.XRCCTRL(self, "pnl_sparc_align_streams")
        self.fp_ma_settings_spectrum = xrc.XRCCTRL(self, "fp_ma_settings_spectrum")



class xrcpnl_tab_sparc_chamber(wx.Panel):
#!XRCED:begin-block:xrcpnl_tab_sparc_chamber.PreCreate
    def PreCreate(self, pre):
        """ This function is called during the class's initialization.

        Override it for custom setup before the window is created usually to
        set additional window styles using SetWindowStyle() and SetExtraStyle().
        """
        pass

#!XRCED:end-block:xrcpnl_tab_sparc_chamber.PreCreate

    def __init__(self, parent):
        # Two stage creation (see http://wiki.wxpython.org/index.cgi/TwoStageCreation)
        pre = wx.PrePanel()
        self.PreCreate(pre)
        get_resources().LoadOnPanel(pre, parent, "pnl_tab_sparc_chamber")
        self.PostCreate(pre)

        # Define variables for the controls, bind event handlers
        self.vp_chamber = xrc.XRCCTRL(self, "vp_chamber")



class xrcpnl_tab_sparc_acqui(wx.Panel):
#!XRCED:begin-block:xrcpnl_tab_sparc_acqui.PreCreate
    def PreCreate(self, pre):
        """ This function is called during the class's initialization.

        Override it for custom setup before the window is created usually to
        set additional window styles using SetWindowStyle() and SetExtraStyle().
        """
        pass

#!XRCED:end-block:xrcpnl_tab_sparc_acqui.PreCreate

    def __init__(self, parent):
        # Two stage creation (see http://wiki.wxpython.org/index.cgi/TwoStageCreation)
        pre = wx.PrePanel()
        self.PreCreate(pre)
        get_resources().LoadOnPanel(pre, parent, "pnl_tab_sparc_acqui")
        self.PostCreate(pre)

        # Define variables for the controls, bind event handlers
        self.sparc_acq_toolbar = xrc.XRCCTRL(self, "sparc_acq_toolbar")
        self.lbl_sparc_view_all = xrc.XRCCTRL(self, "lbl_sparc_view_all")
        self.btn_sparc_view_all = xrc.XRCCTRL(self, "btn_sparc_view_all")
        self.lbl_sparc_view_tl = xrc.XRCCTRL(self, "lbl_sparc_view_tl")
        self.btn_sparc_view_tl = xrc.XRCCTRL(self, "btn_sparc_view_tl")
        self.lbl_sparc_view_tr = xrc.XRCCTRL(self, "lbl_sparc_view_tr")
        self.btn_sparc_view_tr = xrc.XRCCTRL(self, "btn_sparc_view_tr")
        self.lbl_sparc_view_bl = xrc.XRCCTRL(self, "lbl_sparc_view_bl")
        self.btn_sparc_view_bl = xrc.XRCCTRL(self, "btn_sparc_view_bl")
        self.lbl_sparc_view_br = xrc.XRCCTRL(self, "lbl_sparc_view_br")
        self.btn_sparc_view_br = xrc.XRCCTRL(self, "btn_sparc_view_br")
        self.pnl_sparc_grid = xrc.XRCCTRL(self, "pnl_sparc_grid")
        self.vp_sparc_tl = xrc.XRCCTRL(self, "vp_sparc_tl")
        self.vp_sparc_tr = xrc.XRCCTRL(self, "vp_sparc_tr")
        self.vp_sparc_bl = xrc.XRCCTRL(self, "vp_sparc_bl")
        self.vp_sparc_br = xrc.XRCCTRL(self, "vp_sparc_br")
        self.scr_win_right = xrc.XRCCTRL(self, "scr_win_right")
        self.fpb_settings = xrc.XRCCTRL(self, "fpb_settings")
        self.pnl_sparc_streams = xrc.XRCCTRL(self, "pnl_sparc_streams")
        self.txt_filename = xrc.XRCCTRL(self, "txt_filename")
        self.btn_sparc_change_file = xrc.XRCCTRL(self, "btn_sparc_change_file")
        self.txt_destination = xrc.XRCCTRL(self, "txt_destination")
        self.lbl_sparc_acq_estimate = xrc.XRCCTRL(self, "lbl_sparc_acq_estimate")
        self.gauge_sparc_acq = xrc.XRCCTRL(self, "gauge_sparc_acq")
        self.btn_sparc_cancel = xrc.XRCCTRL(self, "btn_sparc_cancel")
        self.btn_sparc_acquire = xrc.XRCCTRL(self, "btn_sparc_acquire")



class xrcpnl_tab_inspection(wx.Panel):
#!XRCED:begin-block:xrcpnl_tab_inspection.PreCreate
    def PreCreate(self, pre):
        """ This function is called during the class's initialization.

        Override it for custom setup before the window is created usually to
        set additional window styles using SetWindowStyle() and SetExtraStyle().
        """
        pass

#!XRCED:end-block:xrcpnl_tab_inspection.PreCreate

    def __init__(self, parent):
        # Two stage creation (see http://wiki.wxpython.org/index.cgi/TwoStageCreation)
        pre = wx.PrePanel()
        self.PreCreate(pre)
        get_resources().LoadOnPanel(pre, parent, "pnl_tab_inspection")
        self.PostCreate(pre)

        # Define variables for the controls, bind event handlers
        self.btn_open_image = xrc.XRCCTRL(self, "btn_open_image")
        self.ana_toolbar = xrc.XRCCTRL(self, "ana_toolbar")
        self.lbl_inspection_view_all = xrc.XRCCTRL(self, "lbl_inspection_view_all")
        self.btn_inspection_view_all = xrc.XRCCTRL(self, "btn_inspection_view_all")
        self.lbl_inspection_view_tl = xrc.XRCCTRL(self, "lbl_inspection_view_tl")
        self.btn_inspection_view_tl = xrc.XRCCTRL(self, "btn_inspection_view_tl")
        self.lbl_inspection_view_tr = xrc.XRCCTRL(self, "lbl_inspection_view_tr")
        self.btn_inspection_view_tr = xrc.XRCCTRL(self, "btn_inspection_view_tr")
        self.lbl_inspection_view_bl = xrc.XRCCTRL(self, "lbl_inspection_view_bl")
        self.btn_inspection_view_bl = xrc.XRCCTRL(self, "btn_inspection_view_bl")
        self.lbl_inspection_view_br = xrc.XRCCTRL(self, "lbl_inspection_view_br")
        self.btn_inspection_view_br = xrc.XRCCTRL(self, "btn_inspection_view_br")
        self.pnl_inspection_grid = xrc.XRCCTRL(self, "pnl_inspection_grid")
        self.vp_inspection_tl = xrc.XRCCTRL(self, "vp_inspection_tl")
        self.vp_inspection_tr = xrc.XRCCTRL(self, "vp_inspection_tr")
        self.vp_inspection_bl = xrc.XRCCTRL(self, "vp_inspection_bl")
        self.vp_inspection_br = xrc.XRCCTRL(self, "vp_inspection_br")
        self.vp_angular = xrc.XRCCTRL(self, "vp_angular")
        self.vp_inspection_plot = xrc.XRCCTRL(self, "vp_inspection_plot")
        self.vp_spatialspec = xrc.XRCCTRL(self, "vp_spatialspec")
        self.scr_win_right = xrc.XRCCTRL(self, "scr_win_right")
        self.fp_fileinfo = xrc.XRCCTRL(self, "fp_fileinfo")
        self.pnl_inspection_streams = xrc.XRCCTRL(self, "pnl_inspection_streams")
        self.fp_annotations = xrc.XRCCTRL(self, "fp_annotations")



class xrcpnl_tab_secom_streams(wx.Panel):
#!XRCED:begin-block:xrcpnl_tab_secom_streams.PreCreate
    def PreCreate(self, pre):
        """ This function is called during the class's initialization.

        Override it for custom setup before the window is created usually to
        set additional window styles using SetWindowStyle() and SetExtraStyle().
        """
        pass

#!XRCED:end-block:xrcpnl_tab_secom_streams.PreCreate

    def __init__(self, parent):
        # Two stage creation (see http://wiki.wxpython.org/index.cgi/TwoStageCreation)
        pre = wx.PrePanel()
        self.PreCreate(pre)
        get_resources().LoadOnPanel(pre, parent, "pnl_tab_secom_streams")
        self.PostCreate(pre)

        # Define variables for the controls, bind event handlers
        self.lbl_secom_overview = xrc.XRCCTRL(self, "lbl_secom_overview")
        self.btn_secom_overview = xrc.XRCCTRL(self, "btn_secom_overview")
        self.secom_toolbar = xrc.XRCCTRL(self, "secom_toolbar")
        self.lbl_secom_view_all = xrc.XRCCTRL(self, "lbl_secom_view_all")
        self.btn_secom_view_all = xrc.XRCCTRL(self, "btn_secom_view_all")
        self.lbl_secom_view_tl = xrc.XRCCTRL(self, "lbl_secom_view_tl")
        self.btn_secom_view_tl = xrc.XRCCTRL(self, "btn_secom_view_tl")
        self.lbl_secom_view_tr = xrc.XRCCTRL(self, "lbl_secom_view_tr")
        self.btn_secom_view_tr = xrc.XRCCTRL(self, "btn_secom_view_tr")
        self.lbl_secom_view_bl = xrc.XRCCTRL(self, "lbl_secom_view_bl")
        self.btn_secom_view_bl = xrc.XRCCTRL(self, "btn_secom_view_bl")
        self.lbl_secom_view_br = xrc.XRCCTRL(self, "lbl_secom_view_br")
        self.btn_secom_view_br = xrc.XRCCTRL(self, "btn_secom_view_br")
        self.pnl_secom_grid = xrc.XRCCTRL(self, "pnl_secom_grid")
        self.vp_secom_tl = xrc.XRCCTRL(self, "vp_secom_tl")
        self.vp_secom_tr = xrc.XRCCTRL(self, "vp_secom_tr")
        self.vp_secom_bl = xrc.XRCCTRL(self, "vp_secom_bl")
        self.vp_secom_br = xrc.XRCCTRL(self, "vp_secom_br")
        self.vp_overview_sem = xrc.XRCCTRL(self, "vp_overview_sem")
        self.live_btn_press = xrc.XRCCTRL(self, "live_btn_press")
        self.live_btn_opt = xrc.XRCCTRL(self, "live_btn_opt")
        self.live_btn_sem = xrc.XRCCTRL(self, "live_btn_sem")
        self.pnl_hw_info = xrc.XRCCTRL(self, "pnl_hw_info")
        self.pnl_load_status = xrc.XRCCTRL(self, "pnl_load_status")
        self.gauge_load_time = xrc.XRCCTRL(self, "gauge_load_time")
        self.lbl_load_time = xrc.XRCCTRL(self, "lbl_load_time")
        self.pnl_stream_status = xrc.XRCCTRL(self, "pnl_stream_status")
        self.bmp_stream_status_info = xrc.XRCCTRL(self, "bmp_stream_status_info")
        self.bmp_stream_status_warn = xrc.XRCCTRL(self, "bmp_stream_status_warn")
        self.bmp_stream_status_error = xrc.XRCCTRL(self, "bmp_stream_status_error")
        self.lbl_stream_status = xrc.XRCCTRL(self, "lbl_stream_status")
        self.scr_win_right = xrc.XRCCTRL(self, "scr_win_right")
        self.fp_settings_secom_optical = xrc.XRCCTRL(self, "fp_settings_secom_optical")
        self.fp_settings_secom_sem = xrc.XRCCTRL(self, "fp_settings_secom_sem")
        self.pnl_secom_streams = xrc.XRCCTRL(self, "pnl_secom_streams")
        self.fp_annotations = xrc.XRCCTRL(self, "fp_annotations")
        self.btn_secom_acquire = xrc.XRCCTRL(self, "btn_secom_acquire")



class xrcfr_acq(wx.Dialog):
#!XRCED:begin-block:xrcfr_acq.PreCreate
    def PreCreate(self, pre):
        """ This function is called during the class's initialization.

        Override it for custom setup before the window is created usually to
        set additional window styles using SetWindowStyle() and SetExtraStyle().
        """
        pass

#!XRCED:end-block:xrcfr_acq.PreCreate

    def __init__(self, parent):
        # Two stage creation (see http://wiki.wxpython.org/index.cgi/TwoStageCreation)
        pre = wx.PreDialog()
        self.PreCreate(pre)
        get_resources().LoadOnDialog(pre, parent, "fr_acq")
        self.PostCreate(pre)

        # Define variables for the controls, bind event handlers
        self.pnl_view_acq = xrc.XRCCTRL(self, "pnl_view_acq")
        self.cmb_presets = xrc.XRCCTRL(self, "cmb_presets")
        self.txt_filename = xrc.XRCCTRL(self, "txt_filename")
        self.btn_change_file = xrc.XRCCTRL(self, "btn_change_file")
        self.txt_destination = xrc.XRCCTRL(self, "txt_destination")
        self.scr_win_right = xrc.XRCCTRL(self, "scr_win_right")
        self.fp_settings_secom_optical = xrc.XRCCTRL(self, "fp_settings_secom_optical")
        self.fp_settings_secom_sem = xrc.XRCCTRL(self, "fp_settings_secom_sem")
        self.pnl_secom_streams = xrc.XRCCTRL(self, "pnl_secom_streams")
        self.chkbox_fine_align = xrc.XRCCTRL(self, "chkbox_fine_align")
        self.gauge_acq = xrc.XRCCTRL(self, "gauge_acq")
        self.lbl_acqestimate = xrc.XRCCTRL(self, "lbl_acqestimate")
        self.btn_cancel = xrc.XRCCTRL(self, "btn_cancel")
        self.btn_secom_acquire = xrc.XRCCTRL(self, "btn_secom_acquire")





# ------------------------ Resource data ----------------------

def __init_resources():
    global __res
    __res = xrc.EmptyXmlResource()

    __res.Load('main.xrc')
